{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["baseUrl","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","newObject","post","put","Note","note","toggleImportance","label","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84d560a7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This not is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  const className = note.important\n    ? 'important note'\n    : 'note'\n\n  return (\n    <li className={className}>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app by Josh Sanderlin 2020</em>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  console.log('render', notes.length, 'notes')\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`The note '${note.content}' was already deleted from the server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes for days</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}